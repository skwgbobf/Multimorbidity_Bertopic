# Multimorbidity BERTopic Analysis - Python Dependencies
# =======================================================
# Project: Multimorbidity Pattern Discovery using BERTopic
# Python: 3.7+
# Last Updated: 2024

# Core Data Processing
# --------------------
pandas>=1.3.0
numpy>=1.21.0

# Visualization
# -------------
matplotlib>=3.4.0
seaborn>=0.11.0

# Jupyter Notebook Environment
# -----------------------------
jupyter>=1.0.0
notebook>=6.4.0
ipykernel>=6.0.0
ipython>=7.30.0

# BERTopic and Dependencies
# --------------------------
bertopic>=0.12.0
# BERTopic dependencies (usually auto-installed)
sentence-transformers>=2.2.0
umap-learn>=0.5.3
hdbscan>=0.8.27
scikit-learn>=0.24.0

# Natural Language Processing
# ----------------------------
transformers>=4.20.0
torch>=1.9.0  # or tensorflow>=2.8.0 (choose based on your preference)

# Data Format Handling
# --------------------
openpyxl>=3.0.0  # For Excel file handling (.xlsx)
xlrd>=2.0.0      # For older Excel files (.xls)
pickle5>=0.0.11  # For Python < 3.8 (backward compatibility)

# Statistical Analysis
# --------------------
scipy>=1.7.0
statsmodels>=0.13.0

# Utilities
# ---------
tqdm>=4.62.0      # Progress bars
joblib>=1.1.0     # Parallel processing

# Optional but Recommended
# ------------------------
plotly>=5.3.0     # Interactive visualizations for BERTopic
kaleido>=0.2.1    # Export plotly figures
python-dateutil>=2.8.0

# Development Tools (Optional)
# -----------------------------
# black>=22.0.0     # Code formatting
# pylint>=2.12.0    # Code linting
# pytest>=6.2.0     # Testing framework

# System-specific Notes
# ---------------------
# For Windows users with Python < 3.8:
#   - Install Visual C++ Build Tools if needed for hdbscan
#
# For GPU acceleration (optional):
#   - Install CUDA toolkit
#   - Use: pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
#
# For Apple Silicon (M1/M2) users:
#   - Some packages may need conda: conda install -c conda-forge hdbscan umap-learn

# Alternative Installation Commands
# ----------------------------------
# Install all at once:
#   pip install -r requirements.txt
#
# Install with specific CUDA version (for GPU):
#   pip install -r requirements.txt
#   pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118
#
# Create virtual environment first:
#   python -m venv venv
#   source venv/bin/activate  # On Windows: venv\Scripts\activate
#   pip install -r requirements.txt
